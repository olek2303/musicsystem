name: Music Review System Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - docker/frontend/**
      - frontend/**
      - .github/workflows/pipeline-frontend.yaml
      - 'compose.yaml'
  pull_request:
    branches:
      - main

jobs:
  build-image:
    name: Build FE Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract Project Version
        id: extract_version
        run: |
          VERSION=$(grep -oP '(?<="version": ")[^"]*' frontend/package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/musicsystem-front:latest -f docker/frontend/Dockerfile .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/musicsystem-front:latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/musicsystem-front:latest ${{ secrets.DOCKERHUB_USERNAME }}/musicsystem-front:${{ steps.extract_version.outputs.VERSION }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/musicsystem-front:${{ steps.extract_version.outputs.VERSION }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Docker Swarm
    needs: [build-image]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_KEY }}
      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts
      - name: Create Deployment Folder
        run: ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p /home/${{ secrets.VPS_USERNAME }}/ci-cd"
      - name: Copy docker-compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_KEY }}
          source: 'compose.yaml'
          target: '/home/${{ secrets.VPS_USERNAME }}/ci-cd/'

      - name: Set ENV variables and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          cd /home/${{ secrets.VPS_USERNAME }}/ci-cd
          docker-compose -f compose.yaml pull -q
          docker-compose -f compose.yaml up -d
          EOF
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
#      - name: Deploy to Docker Swarm
#        run: |
#          docker stack deploy -c compose.yaml music-review-system-frontend
